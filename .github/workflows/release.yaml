# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
    
# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  release-image:
    name: Release image
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build list of Docker tags to use
        id: tag-types
        run: |
          if [[ ${{ contains(github.ref, 'tag') }} == true ]]; then
          TAGS="
            type=semver,pattern={{major}},priority=920
            type=semver,pattern={{major}}.{{minor}},priority=910
            type=semver,pattern={{version}},priority=900
            type=ref,event=branch
            type=sha,format=long"
          else
          TAGS="
            type=ref,event=branch
            type=sha,format=long"
          fi

          # https://trstringer.com/github-actions-multiline-strings
          {
            echo "TAGS<<EOF"
            echo "$TAGS"
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Set Docker labels and tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.TAGS }}

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest git tag
        id: get-tag
        uses: olegtarasov/get-tag@2.1.3

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.get-tag.outputs.tag }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
